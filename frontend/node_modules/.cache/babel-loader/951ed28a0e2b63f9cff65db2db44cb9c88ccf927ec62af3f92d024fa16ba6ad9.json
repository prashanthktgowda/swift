{"ast":null,"code":"var _jsxFileName = \"/home/prashanthktgowda/academics_project/uber1.0/frontend/src/pages/BookingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MapComponent from '../components/MapComponent';\nimport './BookingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingPage() {\n  _s();\n  const [pickupLocation, setPickupLocation] = useState('');\n  const [destination, setDestination] = useState('');\n  const [nearbyLocations, setNearbyLocations] = useState([]);\n  const [message, setMessage] = useState('');\n  const [rideLocation, setRideLocation] = useState(null);\n  const userId = localStorage.getItem('userId'); // Assume userId is stored in localStorage after login\n\n  useEffect(() => {\n    // Get user's current location\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      console.log('User location:', {\n        latitude,\n        longitude\n      });\n\n      // Fetch nearby locations from the backend\n      try {\n        const response = await axios.get('/api/locations/nearby', {\n          params: {\n            lat: latitude,\n            lon: longitude\n          }\n        });\n        setNearbyLocations(response.data.nearbyLocations);\n      } catch (error) {\n        console.error('Error fetching nearby locations:', error);\n      }\n    }, error => {\n      console.error('Error getting user location:', error);\n    });\n  }, []);\n  const handleBookRide = () => {\n    if (!pickupLocation || !destination) {\n      setMessage('Please fill in both pickup and destination locations.');\n      return;\n    }\n    // Handle booking a ride\n    axios.post('/api/rides/book', {\n      userId,\n      pickupLocation,\n      destination\n    }).then(response => {\n      setMessage('Ride booked successfully!');\n      // Start fetching real-time ride location\n      const rideId = response.data.rideId;\n      const intervalId = setInterval(async () => {\n        try {\n          const rideResponse = await axios.get(`/api/rides/${rideId}/location`);\n          setRideLocation(rideResponse.data.location);\n        } catch (error) {\n          console.error('Error fetching ride location:', error);\n          clearInterval(intervalId);\n        }\n      }, 5000); // Fetch location every 5 seconds\n    }).catch(error => setMessage('Error booking ride.'));\n  };\n  const handleSelectLocation = location => {\n    if (!pickupLocation) {\n      setPickupLocation(location);\n    } else {\n      setDestination(location);\n    }\n  };\n  const markers = [{\n    position: [12.9716, 77.5946],\n    popup: 'Pickup Location'\n  },\n  // Example marker for Bangalore\n  {\n    position: [12.2958, 76.6394],\n    popup: 'Destination'\n  } // Example marker for Mysore\n  ];\n  if (rideLocation) {\n    markers.push({\n      position: [rideLocation.lat, rideLocation.lon],\n      popup: 'Ride Location'\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card booking-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book Your Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        center: [12.9716, 77.5946],\n        markers: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Pickup Location\",\n          value: pickupLocation,\n          onChange: e => setPickupLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Destination\",\n          value: destination,\n          onChange: e => setDestination(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleBookRide,\n        children: \"Book Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nearby Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nearby-locations\",\n        children: Object.entries(nearbyLocations).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSelectLocation(value),\n          children: [key, \": \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(BookingPage, \"rzaCfbVLQTeC6XjJrM1XVpPXu/g=\");\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapComponent","jsxDEV","_jsxDEV","BookingPage","_s","pickupLocation","setPickupLocation","destination","setDestination","nearbyLocations","setNearbyLocations","message","setMessage","rideLocation","setRideLocation","userId","localStorage","getItem","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","response","get","params","lat","lon","data","error","handleBookRide","post","then","rideId","intervalId","setInterval","rideResponse","location","clearInterval","catch","handleSelectLocation","markers","popup","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","type","placeholder","value","onChange","e","target","onClick","Object","entries","map","key","_c","$RefreshReg$"],"sources":["/home/prashanthktgowda/academics_project/uber1.0/frontend/src/pages/BookingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MapComponent from '../components/MapComponent';\nimport './BookingPage.css';\n\nfunction BookingPage() {\n    const [pickupLocation, setPickupLocation] = useState('');\n    const [destination, setDestination] = useState('');\n    const [nearbyLocations, setNearbyLocations] = useState([]);\n    const [message, setMessage] = useState('');\n    const [rideLocation, setRideLocation] = useState(null);\n    const userId = localStorage.getItem('userId'); // Assume userId is stored in localStorage after login\n\n    useEffect(() => {\n        // Get user's current location\n        navigator.geolocation.getCurrentPosition(\n            async (position) => {\n                const { latitude, longitude } = position.coords;\n                console.log('User location:', { latitude, longitude });\n\n                // Fetch nearby locations from the backend\n                try {\n                    const response = await axios.get('/api/locations/nearby', {\n                        params: { lat: latitude, lon: longitude },\n                    });\n                    setNearbyLocations(response.data.nearbyLocations);\n                } catch (error) {\n                    console.error('Error fetching nearby locations:', error);\n                }\n            },\n            (error) => {\n                console.error('Error getting user location:', error);\n            }\n        );\n    }, []);\n\n    const handleBookRide = () => {\n        if (!pickupLocation || !destination) {\n            setMessage('Please fill in both pickup and destination locations.');\n            return;\n        }\n        // Handle booking a ride\n        axios.post('/api/rides/book', { userId, pickupLocation, destination })\n            .then(response => {\n                setMessage('Ride booked successfully!');\n                // Start fetching real-time ride location\n                const rideId = response.data.rideId;\n                const intervalId = setInterval(async () => {\n                    try {\n                        const rideResponse = await axios.get(`/api/rides/${rideId}/location`);\n                        setRideLocation(rideResponse.data.location);\n                    } catch (error) {\n                        console.error('Error fetching ride location:', error);\n                        clearInterval(intervalId);\n                    }\n                }, 5000); // Fetch location every 5 seconds\n            })\n            .catch(error => setMessage('Error booking ride.'));\n    };\n\n    const handleSelectLocation = (location) => {\n        if (!pickupLocation) {\n            setPickupLocation(location);\n        } else {\n            setDestination(location);\n        }\n    };\n\n    const markers = [\n        { position: [12.9716, 77.5946], popup: 'Pickup Location' }, // Example marker for Bangalore\n        { position: [12.2958, 76.6394], popup: 'Destination' }, // Example marker for Mysore\n    ];\n\n    if (rideLocation) {\n        markers.push({ position: [rideLocation.lat, rideLocation.lon], popup: 'Ride Location' });\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"card booking-card\">\n                <h1>Book Your Ride</h1>\n                <MapComponent center={[12.9716, 77.5946]} markers={markers} />\n                <div className=\"input-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Pickup Location\"\n                        value={pickupLocation}\n                        onChange={e => setPickupLocation(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Destination\"\n                        value={destination}\n                        onChange={e => setDestination(e.target.value)}\n                    />\n                </div>\n                <button className=\"button\" onClick={handleBookRide}>Book Ride</button>\n                {message && <p className=\"message\">{message}</p>}\n                <h2>Nearby Locations</h2>\n                <ul className=\"nearby-locations\">\n                    {Object.entries(nearbyLocations).map(([key, value]) => (\n                        <li key={key} onClick={() => handleSelectLocation(value)}>\n                            {key}: {value}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default BookingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}